[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pyUSPTO"
description = "Python client for accessing USPTO APIs"
authors = [
    {name = "Andrew Piechocki", email = "apiechocki@dunlapcodding.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
keywords = ["uspto", "patent", "api", "client", "bulk data", "patent data"]
dependencies = [
    "requests>=2.25.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/DunlapCoddingPC/pyUSPTO"
"Bug Tracker" = "https://github.com/DunlapCoddingPC/pyUSPTO/issues"

[tool.setuptools_scm]
write_to = "pyUSPTO/_version.py"

[tool.mypy]
config_file = "mypy.ini"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
profile = "black"

[tool.pytest.ini_options]
testpaths = ["pyUSPTO/tests"]

[tool.coverage.run]
source = ["pyUSPTO"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    # Skip protocol definitions
    "class FromDictProtocol\\(Protocol\\):",
    "def from_dict\\(cls, data: Dict\\[str, Any\\]\\) -> Any:",
    "\\.\\.\\.",
    # Skip abstract methods 
    "@abstractmethod",
    # Skip defensive assertion code
    "raise NotImplementedError",
    # Skip type checking blocks
    "if TYPE_CHECKING:",
    "pass",
]
